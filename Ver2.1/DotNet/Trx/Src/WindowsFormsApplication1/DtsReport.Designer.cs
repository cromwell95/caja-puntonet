//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AppDemo {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DtsReport")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DtsReport : global::System.Data.DataSet {
        
        private compraDataTable tablecompra;
        
        private anulacionDataTable tableanulacion;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DtsReport() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DtsReport(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["compra"] != null)) {
                    base.Tables.Add(new compraDataTable(ds.Tables["compra"]));
                }
                if ((ds.Tables["anulacion"] != null)) {
                    base.Tables.Add(new anulacionDataTable(ds.Tables["anulacion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public compraDataTable compra {
            get {
                return this.tablecompra;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public anulacionDataTable anulacion {
            get {
                return this.tableanulacion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DtsReport cln = ((DtsReport)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["compra"] != null)) {
                    base.Tables.Add(new compraDataTable(ds.Tables["compra"]));
                }
                if ((ds.Tables["anulacion"] != null)) {
                    base.Tables.Add(new anulacionDataTable(ds.Tables["anulacion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablecompra = ((compraDataTable)(base.Tables["compra"]));
            if ((initTable == true)) {
                if ((this.tablecompra != null)) {
                    this.tablecompra.InitVars();
                }
            }
            this.tableanulacion = ((anulacionDataTable)(base.Tables["anulacion"]));
            if ((initTable == true)) {
                if ((this.tableanulacion != null)) {
                    this.tableanulacion.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DtsReport";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DtsReport.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablecompra = new compraDataTable();
            base.Tables.Add(this.tablecompra);
            this.tableanulacion = new anulacionDataTable();
            base.Tables.Add(this.tableanulacion);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecompra() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeanulacion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DtsReport ds = new DtsReport();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void compraRowChangeEventHandler(object sender, compraRowChangeEvent e);
        
        public delegate void anulacionRowChangeEventHandler(object sender, anulacionRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class compraDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncomercio;
            
            private global::System.Data.DataColumn columnlote;
            
            private global::System.Data.DataColumn columntid;
            
            private global::System.Data.DataColumn columntarjeta;
            
            private global::System.Data.DataColumn columnnumtar;
            
            private global::System.Data.DataColumn columnlectura;
            
            private global::System.Data.DataColumn columntransaccion;
            
            private global::System.Data.DataColumn columnautorizacion;
            
            private global::System.Data.DataColumn columntarifa12;
            
            private global::System.Data.DataColumn columntarifa0;
            
            private global::System.Data.DataColumn columnsubtotal;
            
            private global::System.Data.DataColumn columniva;
            
            private global::System.Data.DataColumn columntotal;
            
            private global::System.Data.DataColumn columnaplabel;
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnhora;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public compraDataTable() {
                this.TableName = "compra";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal compraDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected compraDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn comercioColumn {
                get {
                    return this.columncomercio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn loteColumn {
                get {
                    return this.columnlote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tidColumn {
                get {
                    return this.columntid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tarjetaColumn {
                get {
                    return this.columntarjeta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numtarColumn {
                get {
                    return this.columnnumtar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lecturaColumn {
                get {
                    return this.columnlectura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn transaccionColumn {
                get {
                    return this.columntransaccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn autorizacionColumn {
                get {
                    return this.columnautorizacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tarifa12Column {
                get {
                    return this.columntarifa12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tarifa0Column {
                get {
                    return this.columntarifa0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subtotalColumn {
                get {
                    return this.columnsubtotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ivaColumn {
                get {
                    return this.columniva;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalColumn {
                get {
                    return this.columntotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn aplabelColumn {
                get {
                    return this.columnaplabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn horaColumn {
                get {
                    return this.columnhora;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public compraRow this[int index] {
                get {
                    return ((compraRow)(this.Rows[index]));
                }
            }
            
            public event compraRowChangeEventHandler compraRowChanging;
            
            public event compraRowChangeEventHandler compraRowChanged;
            
            public event compraRowChangeEventHandler compraRowDeleting;
            
            public event compraRowChangeEventHandler compraRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcompraRow(compraRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public compraRow AddcompraRow(
                        string comercio, 
                        string lote, 
                        string tid, 
                        string tarjeta, 
                        string numtar, 
                        string lectura, 
                        string transaccion, 
                        string autorizacion, 
                        decimal tarifa12, 
                        decimal tarifa0, 
                        decimal subtotal, 
                        decimal iva, 
                        decimal total, 
                        string aplabel, 
                        string nombre, 
                        System.DateTime fecha, 
                        System.DateTime hora) {
                compraRow rowcompraRow = ((compraRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        comercio,
                        lote,
                        tid,
                        tarjeta,
                        numtar,
                        lectura,
                        transaccion,
                        autorizacion,
                        tarifa12,
                        tarifa0,
                        subtotal,
                        iva,
                        total,
                        aplabel,
                        nombre,
                        fecha,
                        hora};
                rowcompraRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcompraRow);
                return rowcompraRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                compraDataTable cln = ((compraDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new compraDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncomercio = base.Columns["comercio"];
                this.columnlote = base.Columns["lote"];
                this.columntid = base.Columns["tid"];
                this.columntarjeta = base.Columns["tarjeta"];
                this.columnnumtar = base.Columns["numtar"];
                this.columnlectura = base.Columns["lectura"];
                this.columntransaccion = base.Columns["transaccion"];
                this.columnautorizacion = base.Columns["autorizacion"];
                this.columntarifa12 = base.Columns["tarifa12"];
                this.columntarifa0 = base.Columns["tarifa0"];
                this.columnsubtotal = base.Columns["subtotal"];
                this.columniva = base.Columns["iva"];
                this.columntotal = base.Columns["total"];
                this.columnaplabel = base.Columns["aplabel"];
                this.columnnombre = base.Columns["nombre"];
                this.columnfecha = base.Columns["fecha"];
                this.columnhora = base.Columns["hora"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncomercio = new global::System.Data.DataColumn("comercio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomercio);
                this.columnlote = new global::System.Data.DataColumn("lote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlote);
                this.columntid = new global::System.Data.DataColumn("tid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntid);
                this.columntarjeta = new global::System.Data.DataColumn("tarjeta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntarjeta);
                this.columnnumtar = new global::System.Data.DataColumn("numtar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumtar);
                this.columnlectura = new global::System.Data.DataColumn("lectura", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlectura);
                this.columntransaccion = new global::System.Data.DataColumn("transaccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransaccion);
                this.columnautorizacion = new global::System.Data.DataColumn("autorizacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnautorizacion);
                this.columntarifa12 = new global::System.Data.DataColumn("tarifa12", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntarifa12);
                this.columntarifa0 = new global::System.Data.DataColumn("tarifa0", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntarifa0);
                this.columnsubtotal = new global::System.Data.DataColumn("subtotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubtotal);
                this.columniva = new global::System.Data.DataColumn("iva", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniva);
                this.columntotal = new global::System.Data.DataColumn("total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal);
                this.columnaplabel = new global::System.Data.DataColumn("aplabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaplabel);
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnhora = new global::System.Data.DataColumn("hora", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhora);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public compraRow NewcompraRow() {
                return ((compraRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new compraRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(compraRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.compraRowChanged != null)) {
                    this.compraRowChanged(this, new compraRowChangeEvent(((compraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.compraRowChanging != null)) {
                    this.compraRowChanging(this, new compraRowChangeEvent(((compraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.compraRowDeleted != null)) {
                    this.compraRowDeleted(this, new compraRowChangeEvent(((compraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.compraRowDeleting != null)) {
                    this.compraRowDeleting(this, new compraRowChangeEvent(((compraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecompraRow(compraRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DtsReport ds = new DtsReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "compraDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class anulacionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncomercio;
            
            private global::System.Data.DataColumn columnlote;
            
            private global::System.Data.DataColumn columntid;
            
            private global::System.Data.DataColumn columntarjeta;
            
            private global::System.Data.DataColumn columnnumtar;
            
            private global::System.Data.DataColumn columnlectura;
            
            private global::System.Data.DataColumn columntransaccion;
            
            private global::System.Data.DataColumn columnautorizacion;
            
            private global::System.Data.DataColumn columntrxanulada;
            
            private global::System.Data.DataColumn columntotal;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnhora;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public anulacionDataTable() {
                this.TableName = "anulacion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal anulacionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected anulacionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn comercioColumn {
                get {
                    return this.columncomercio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn loteColumn {
                get {
                    return this.columnlote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tidColumn {
                get {
                    return this.columntid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tarjetaColumn {
                get {
                    return this.columntarjeta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numtarColumn {
                get {
                    return this.columnnumtar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lecturaColumn {
                get {
                    return this.columnlectura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn transaccionColumn {
                get {
                    return this.columntransaccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn autorizacionColumn {
                get {
                    return this.columnautorizacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trxanuladaColumn {
                get {
                    return this.columntrxanulada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalColumn {
                get {
                    return this.columntotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn horaColumn {
                get {
                    return this.columnhora;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public anulacionRow this[int index] {
                get {
                    return ((anulacionRow)(this.Rows[index]));
                }
            }
            
            public event anulacionRowChangeEventHandler anulacionRowChanging;
            
            public event anulacionRowChangeEventHandler anulacionRowChanged;
            
            public event anulacionRowChangeEventHandler anulacionRowDeleting;
            
            public event anulacionRowChangeEventHandler anulacionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddanulacionRow(anulacionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public anulacionRow AddanulacionRow(string comercio, string lote, string tid, string tarjeta, string numtar, string lectura, string transaccion, string autorizacion, string trxanulada, decimal total, System.DateTime fecha, System.DateTime hora) {
                anulacionRow rowanulacionRow = ((anulacionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        comercio,
                        lote,
                        tid,
                        tarjeta,
                        numtar,
                        lectura,
                        transaccion,
                        autorizacion,
                        trxanulada,
                        total,
                        fecha,
                        hora};
                rowanulacionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowanulacionRow);
                return rowanulacionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                anulacionDataTable cln = ((anulacionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new anulacionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncomercio = base.Columns["comercio"];
                this.columnlote = base.Columns["lote"];
                this.columntid = base.Columns["tid"];
                this.columntarjeta = base.Columns["tarjeta"];
                this.columnnumtar = base.Columns["numtar"];
                this.columnlectura = base.Columns["lectura"];
                this.columntransaccion = base.Columns["transaccion"];
                this.columnautorizacion = base.Columns["autorizacion"];
                this.columntrxanulada = base.Columns["trxanulada"];
                this.columntotal = base.Columns["total"];
                this.columnfecha = base.Columns["fecha"];
                this.columnhora = base.Columns["hora"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncomercio = new global::System.Data.DataColumn("comercio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomercio);
                this.columnlote = new global::System.Data.DataColumn("lote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlote);
                this.columntid = new global::System.Data.DataColumn("tid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntid);
                this.columntarjeta = new global::System.Data.DataColumn("tarjeta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntarjeta);
                this.columnnumtar = new global::System.Data.DataColumn("numtar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumtar);
                this.columnlectura = new global::System.Data.DataColumn("lectura", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlectura);
                this.columntransaccion = new global::System.Data.DataColumn("transaccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransaccion);
                this.columnautorizacion = new global::System.Data.DataColumn("autorizacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnautorizacion);
                this.columntrxanulada = new global::System.Data.DataColumn("trxanulada", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrxanulada);
                this.columntotal = new global::System.Data.DataColumn("total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnhora = new global::System.Data.DataColumn("hora", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhora);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public anulacionRow NewanulacionRow() {
                return ((anulacionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new anulacionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(anulacionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.anulacionRowChanged != null)) {
                    this.anulacionRowChanged(this, new anulacionRowChangeEvent(((anulacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.anulacionRowChanging != null)) {
                    this.anulacionRowChanging(this, new anulacionRowChangeEvent(((anulacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.anulacionRowDeleted != null)) {
                    this.anulacionRowDeleted(this, new anulacionRowChangeEvent(((anulacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.anulacionRowDeleting != null)) {
                    this.anulacionRowDeleting(this, new anulacionRowChangeEvent(((anulacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveanulacionRow(anulacionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DtsReport ds = new DtsReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "anulacionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class compraRow : global::System.Data.DataRow {
            
            private compraDataTable tablecompra;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal compraRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecompra = ((compraDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string comercio {
                get {
                    try {
                        return ((string)(this[this.tablecompra.comercioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'comercio\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.comercioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lote {
                get {
                    try {
                        return ((string)(this[this.tablecompra.loteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lote\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.loteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tid {
                get {
                    try {
                        return ((string)(this[this.tablecompra.tidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tid\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.tidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tarjeta {
                get {
                    try {
                        return ((string)(this[this.tablecompra.tarjetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tarjeta\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.tarjetaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string numtar {
                get {
                    try {
                        return ((string)(this[this.tablecompra.numtarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numtar\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.numtarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lectura {
                get {
                    try {
                        return ((string)(this[this.tablecompra.lecturaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lectura\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.lecturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string transaccion {
                get {
                    try {
                        return ((string)(this[this.tablecompra.transaccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'transaccion\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.transaccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string autorizacion {
                get {
                    try {
                        return ((string)(this[this.tablecompra.autorizacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'autorizacion\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.autorizacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tarifa12 {
                get {
                    try {
                        return ((decimal)(this[this.tablecompra.tarifa12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tarifa12\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.tarifa12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tarifa0 {
                get {
                    try {
                        return ((decimal)(this[this.tablecompra.tarifa0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tarifa0\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.tarifa0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal subtotal {
                get {
                    try {
                        return ((decimal)(this[this.tablecompra.subtotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subtotal\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.subtotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal iva {
                get {
                    try {
                        return ((decimal)(this[this.tablecompra.ivaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iva\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.ivaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal total {
                get {
                    try {
                        return ((decimal)(this[this.tablecompra.totalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.totalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string aplabel {
                get {
                    try {
                        return ((string)(this[this.tablecompra.aplabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aplabel\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.aplabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tablecompra.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecompra.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime hora {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecompra.horaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hora\' in table \'compra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompra.horaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscomercioNull() {
                return this.IsNull(this.tablecompra.comercioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcomercioNull() {
                this[this.tablecompra.comercioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsloteNull() {
                return this.IsNull(this.tablecompra.loteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetloteNull() {
                this[this.tablecompra.loteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstidNull() {
                return this.IsNull(this.tablecompra.tidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettidNull() {
                this[this.tablecompra.tidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstarjetaNull() {
                return this.IsNull(this.tablecompra.tarjetaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettarjetaNull() {
                this[this.tablecompra.tarjetaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumtarNull() {
                return this.IsNull(this.tablecompra.numtarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumtarNull() {
                this[this.tablecompra.numtarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslecturaNull() {
                return this.IsNull(this.tablecompra.lecturaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlecturaNull() {
                this[this.tablecompra.lecturaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstransaccionNull() {
                return this.IsNull(this.tablecompra.transaccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettransaccionNull() {
                this[this.tablecompra.transaccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsautorizacionNull() {
                return this.IsNull(this.tablecompra.autorizacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetautorizacionNull() {
                this[this.tablecompra.autorizacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istarifa12Null() {
                return this.IsNull(this.tablecompra.tarifa12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settarifa12Null() {
                this[this.tablecompra.tarifa12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istarifa0Null() {
                return this.IsNull(this.tablecompra.tarifa0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settarifa0Null() {
                this[this.tablecompra.tarifa0Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubtotalNull() {
                return this.IsNull(this.tablecompra.subtotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubtotalNull() {
                this[this.tablecompra.subtotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsivaNull() {
                return this.IsNull(this.tablecompra.ivaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetivaNull() {
                this[this.tablecompra.ivaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalNull() {
                return this.IsNull(this.tablecompra.totalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalNull() {
                this[this.tablecompra.totalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaplabelNull() {
                return this.IsNull(this.tablecompra.aplabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaplabelNull() {
                this[this.tablecompra.aplabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tablecompra.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tablecompra.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tablecompra.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tablecompra.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshoraNull() {
                return this.IsNull(this.tablecompra.horaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethoraNull() {
                this[this.tablecompra.horaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class anulacionRow : global::System.Data.DataRow {
            
            private anulacionDataTable tableanulacion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal anulacionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableanulacion = ((anulacionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string comercio {
                get {
                    try {
                        return ((string)(this[this.tableanulacion.comercioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'comercio\' in table \'anulacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableanulacion.comercioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lote {
                get {
                    try {
                        return ((string)(this[this.tableanulacion.loteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lote\' in table \'anulacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableanulacion.loteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tid {
                get {
                    try {
                        return ((string)(this[this.tableanulacion.tidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tid\' in table \'anulacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableanulacion.tidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tarjeta {
                get {
                    try {
                        return ((string)(this[this.tableanulacion.tarjetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tarjeta\' in table \'anulacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableanulacion.tarjetaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string numtar {
                get {
                    try {
                        return ((string)(this[this.tableanulacion.numtarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numtar\' in table \'anulacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableanulacion.numtarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lectura {
                get {
                    try {
                        return ((string)(this[this.tableanulacion.lecturaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lectura\' in table \'anulacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableanulacion.lecturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string transaccion {
                get {
                    try {
                        return ((string)(this[this.tableanulacion.transaccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'transaccion\' in table \'anulacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableanulacion.transaccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string autorizacion {
                get {
                    try {
                        return ((string)(this[this.tableanulacion.autorizacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'autorizacion\' in table \'anulacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableanulacion.autorizacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string trxanulada {
                get {
                    try {
                        return ((string)(this[this.tableanulacion.trxanuladaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trxanulada\' in table \'anulacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableanulacion.trxanuladaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal total {
                get {
                    try {
                        return ((decimal)(this[this.tableanulacion.totalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total\' in table \'anulacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableanulacion.totalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableanulacion.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'anulacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableanulacion.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime hora {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableanulacion.horaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hora\' in table \'anulacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableanulacion.horaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscomercioNull() {
                return this.IsNull(this.tableanulacion.comercioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcomercioNull() {
                this[this.tableanulacion.comercioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsloteNull() {
                return this.IsNull(this.tableanulacion.loteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetloteNull() {
                this[this.tableanulacion.loteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstidNull() {
                return this.IsNull(this.tableanulacion.tidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettidNull() {
                this[this.tableanulacion.tidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstarjetaNull() {
                return this.IsNull(this.tableanulacion.tarjetaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettarjetaNull() {
                this[this.tableanulacion.tarjetaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumtarNull() {
                return this.IsNull(this.tableanulacion.numtarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumtarNull() {
                this[this.tableanulacion.numtarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslecturaNull() {
                return this.IsNull(this.tableanulacion.lecturaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlecturaNull() {
                this[this.tableanulacion.lecturaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstransaccionNull() {
                return this.IsNull(this.tableanulacion.transaccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettransaccionNull() {
                this[this.tableanulacion.transaccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsautorizacionNull() {
                return this.IsNull(this.tableanulacion.autorizacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetautorizacionNull() {
                this[this.tableanulacion.autorizacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstrxanuladaNull() {
                return this.IsNull(this.tableanulacion.trxanuladaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettrxanuladaNull() {
                this[this.tableanulacion.trxanuladaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalNull() {
                return this.IsNull(this.tableanulacion.totalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalNull() {
                this[this.tableanulacion.totalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tableanulacion.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tableanulacion.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshoraNull() {
                return this.IsNull(this.tableanulacion.horaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethoraNull() {
                this[this.tableanulacion.horaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class compraRowChangeEvent : global::System.EventArgs {
            
            private compraRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public compraRowChangeEvent(compraRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public compraRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class anulacionRowChangeEvent : global::System.EventArgs {
            
            private anulacionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public anulacionRowChangeEvent(anulacionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public anulacionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591